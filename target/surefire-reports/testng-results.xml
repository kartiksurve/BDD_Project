<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="2" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-07T15:26:44 IST" name="Suite" finished-at="2024-08-07T15:27:01 IST" duration-ms="17667">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:showRunner.pkg.RunnerClass@4082ba93]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2024-08-07T15:26:44 IST" name="Test" finished-at="2024-08-07T15:27:01 IST" duration-ms="17667">
      <class name="showRunner.pkg.RunnerClass">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:showRunner.pkg.RunnerClass@4082ba93]" started-at="2024-08-07T15:26:44 IST" name="setUpClass" finished-at="2024-08-07T15:26:45 IST" duration-ms="790" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@448462f0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:showRunner.pkg.RunnerClass@4082ba93]" started-at="2024-08-07T15:26:45 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-07T15:26:51 IST" duration-ms="6267" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["To verify successful login to Login Feature via multiple users."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login Feature for Sauce Demo"]]>
              </value>
            </param>
          </params>
          <exception class="java.io.IOException">
            <message>
              <![CDATA[The system cannot find the path specified]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.IOException: The system cannot find the path specified
at java.base/java.io.WinNTFileSystem.canonicalize0(Native Method)
at java.base/java.io.WinNTFileSystem.canonicalize(WinNTFileSystem.java:463)
at java.base/java.io.File.getCanonicalPath(File.java:626)
at org.apache.commons.io.FileUtils.requireCanonicalPathsNotEquals(FileUtils.java:2601)
at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:842)
at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:756)
at stepDefinition.pkg.StepDef.addScreenShotFile(StepDef.java:73)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.IOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:showRunner.pkg.RunnerClass@4082ba93]" started-at="2024-08-07T15:26:51 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-07T15:26:53 IST" duration-ms="1900" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["To verify successful login to Login Feature via multiple users."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login Feature for Sauce Demo"]]>
              </value>
            </param>
          </params>
          <exception class="java.io.IOException">
            <message>
              <![CDATA[Cannot create a file when that file already exists]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.IOException: Cannot create a file when that file already exists
at java.base/java.io.WinNTFileSystem.canonicalize0(Native Method)
at java.base/java.io.WinNTFileSystem.canonicalize(WinNTFileSystem.java:463)
at java.base/java.io.File.getCanonicalPath(File.java:626)
at org.apache.commons.io.FileUtils.requireCanonicalPathsNotEquals(FileUtils.java:2601)
at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:842)
at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:756)
at stepDefinition.pkg.StepDef.addScreenShotFile(StepDef.java:73)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.IOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:showRunner.pkg.RunnerClass@4082ba93]" started-at="2024-08-07T15:26:53 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-07T15:27:01 IST" duration-ms="8018" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["To buy products using the checkoutfeature"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["To validate the product finalisation"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="TC1()[pri:0, instance:showRunner.pkg.RunnerClass@4082ba93]" started-at="2024-08-07T15:27:01 IST" name="TC1" finished-at="2024-08-07T15:27:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC1 -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:showRunner.pkg.RunnerClass@4082ba93]" started-at="2024-08-07T15:27:01 IST" name="tearDownClass" finished-at="2024-08-07T15:27:01 IST" duration-ms="618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- showRunner.pkg.RunnerClass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
